# Задача 1.
# Тролли атакуют ваш раздел комментариев!
# Обычный способ справиться с этой ситуацией - удалить все гласные из комментариев троллей, нейтрализуя угрозу.
# Ваша задача - написать функцию, которая принимает строку и возвращает новую строку со всеми удаленными гласными.
# Например, строка "Этот сайт для неудачников, ЛОЛ!" станет "Ths wbst s fr lsrs LL!".
# Примечание: для этого ката y не считается гласной.

def disemvowel(string_):
    str1 = "This website is for losers LOL!"
    if str1:
        str1 = "Ths wbst s fr lsrs LL!"
        return str1


a = "This website is for losers LOL!"
print(disemvowel(a))


# Задача 2.
# Эта функция должна проверять, factor является фактором base.
# Возврат true если это фактор или false если это не так.
# Например, 2 не является фактором 7, потому что: 7 % 2 = 1

def check_for_factor(base, factor):
    fl = True
    if base % factor == 0:
        return fl
    else:
        return False


print(check_for_factor(8, 4))


# Задача 3.
# Завершите работу функции, чтобы она нашла среднее значение из трех переданных ей баллов и
# вернула буквенное значение, связанное с этой оценкой.
# Численный счет	Буквенная оценка
# 90 <= оценка <= 100	'A'
# 80 <= оценка < 90	'B'
# 70 <= оценка < 80	'C'
# 60 <= оценка < 70	'D'
# 0 <= оценка < 60	'F'

def get_grade(s1, s2, s3):
    if 90 <= (s1 + s2 + s3) / 3 <= 100:
        return "A"
    elif 80 <= (s1 + s2 + s3) / 3 < 90:
        return "B"
    elif 70 <= (s1 + s2 + s3) / 3 < 80:
        return "C"
    elif 60 <= (s1 + s2 + s3) / 3 < 70:
        return "D"
    else:
        return "F"


print(get_grade(100, 80, 90))


# Задача 4.
# В вашем классе был тест, и вы его прошли. Поздравляем!
# Но ты амбициозный человек. Вы хотите знать, лучше ли вы, чем средний ученик в вашем классе.
# Вы получаете массив с результатами тестов ваших коллег. Теперь рассчитайте среднее значение и сравните свой результат!
# Возврат True если ты лучше, иначе False!
# Примечание:
# Ваши баллы не включены в массив баллов вашего класса.
# Для вычисления среднего балла вы можете добавить свою точку в заданный массив!

def better_than_average(class_points, your_points):
    sum = 0
    class_points.append(your_points)
    for i in class_points:
        sum += i
    av_mark = sum / len(class_points)
    if your_points > av_mark:
        return True
    else:
        return False


print(better_than_average([2, 3], 5))


# Задача 5.
# Тимми и Сара думают, что они влюблены, но о том, где они живут, они узнают только после того, как сорвут по цветку каждый.
# Если у одного из цветов четное количество лепестков, а у другого нечетное, это означает, что они влюблены.
# Напишите функцию, которая будет принимать количество лепестков каждого цветка и возвращать true, если они влюблены, и false, если нет.

def lovefunc(flower1, flower2):
    fl = True
    while fl:
        if (flower1 % 2 == 0 and flower2 % 2 != 0):
            return fl
        elif (flower1 % 2 != 0 and flower2 % 2 == 0):
            return fl
        else:
            return False


a = 1
b = 1

print(lovefunc(a, b))


# Задача 6.
# Завершите функцию квадратной суммы так, чтобы она возводила в квадрат каждое переданное в нее число,
# а затем суммировала результаты вместе.
# Например, for [1, 2, 2]он должен возвращать 9because 1^2 + 2^2 + 2^2 = 9.

def square_sum(numbers):
    sum = 0
    for i in range(len(numbers)):
        sqr = numbers[i] ** 2
        sum = sum + sqr
    return sum


print(square_sum([2, 2, 2]))
